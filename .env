# Dev-Test Environment Variables for Adakings Backend API
# Production-like configuration with test/placeholder values for safe testing

# Django Settings
# DJANGO_ENVIRONMENT determines which settings module Django loads for testing
DJANGO_ENVIRONMENT=dev-test

# DJANGO_SECRET_KEY is used for cryptographic signing - safe test key for dev-test environment
DJANGO_SECRET_KEY=django-dev-test-secret-key-for-testing-only

# DJANGO_DEBUG controls debug mode - disabled to simulate production behavior
DJANGO_DEBUG=False

# DJANGO_ALLOWED_HOSTS defines allowed hostnames for testing environment
DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost,test.adakings.local,dev-test.adakings.local

# Database Configuration (PostgreSQL with test database)
# DB_NAME is the test database name - separate from production data
DB_NAME=adakings_dev_test

# DB_USER is the test database username for authentication
DB_USER=test_user

# DB_PASSWORD is the test database password - safe for dev-test environment
DB_PASSWORD=test_password_123

# DB_HOST is the database server hostname for testing
DB_HOST=localhost

# DB_PORT is the PostgreSQL port number for database connections
DB_PORT=5432

# Email Configuration (Test SMTP or Console)
# EMAIL_HOST is the test SMTP server for email testing (Mailtrap recommended)
EMAIL_HOST=smtp.mailtrap.io

# EMAIL_PORT is the SMTP port for test email service
EMAIL_PORT=2525

# EMAIL_HOST_USER is the username for test SMTP authentication
EMAIL_HOST_USER=test_user

# EMAIL_HOST_PASSWORD is the password for test SMTP service
EMAIL_HOST_PASSWORD=test_password

# DEFAULT_FROM_EMAIL sets the sender address for test emails
DEFAULT_FROM_EMAIL=test@adakings.local

# Paystack Configuration (Test Keys Only)
# PAYSTACK_PUBLIC_KEY_LIVE for frontend payment testing in dev-test sandbox
PAYSTACK_PUBLIC_KEY_LIVE=pk_test_placeholder_public_key_dev_test

# PAYSTACK_SECRET_KEY_LIVE for backend payment verification in dev-test sandbox
PAYSTACK_SECRET_KEY_LIVE=sk_test_placeholder_secret_key_dev_test

# CORS Configuration (Test domains)
# CORS_ALLOWED_ORIGINS defines which test frontend origins can access the API
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://test.adakings.local

# CSRF_TRUSTED_ORIGINS defines trusted origins for CSRF protection in testing
CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000,http://test.adakings.local

# Redis Configuration (Test instance)
# REDIS_URL is the connection string for Redis test database (database 2)
REDIS_URL=redis://127.0.0.1:6379/2

# Security Headers (Relaxed for testing)
# SECURE_SSL_REDIRECT forces HTTPS - disabled for local testing
SECURE_SSL_REDIRECT=False

# SECURE_HSTS_SECONDS sets HSTS max-age - disabled for dev-test
SECURE_HSTS_SECONDS=0

# SECURE_HSTS_INCLUDE_SUBDOMAINS applies HSTS to subdomains - disabled for testing
SECURE_HSTS_INCLUDE_SUBDOMAINS=False

# SECURE_HSTS_PRELOAD allows browser HSTS preloading - disabled for testing
SECURE_HSTS_PRELOAD=False

# Monitoring & Logging (Test/Placeholder)
# SENTRY_DSN is the placeholder URL for error tracking in dev-test
SENTRY_DSN=https://placeholder@sentry.io/dev-test

# LOG_LEVEL controls logging verbosity - DEBUG for detailed test logs
LOG_LEVEL=DEBUG

# Performance Settings (Lower limits for testing)
# MAX_UPLOAD_SIZE sets maximum file upload size in bytes (5MB for testing)
MAX_UPLOAD_SIZE=5242880

# CACHE_TIMEOUT defines cache validity duration in seconds (1 minute for testing)
CACHE_TIMEOUT=60

# API Rate Limiting (More relaxed for testing)
# RATE_LIMIT_ENABLE toggles API rate limiting for testing scenarios
RATE_LIMIT_ENABLE=True

# RATE_LIMIT_REQUESTS sets higher request limit for testing (1000 per window)
RATE_LIMIT_REQUESTS=1000

# RATE_LIMIT_WINDOW defines rate limit time window in seconds (1 hour)
RATE_LIMIT_WINDOW=3600

# Dev-Test Specific Settings
# ENABLE_SWAGGER_UI toggles Swagger API documentation for testing
ENABLE_SWAGGER_UI=True

# ENABLE_REDOC toggles ReDoc API documentation interface
ENABLE_REDOC=True

# ENABLE_DEBUG_TOOLBAR toggles Django Debug Toolbar - disabled for production-like testing
ENABLE_DEBUG_TOOLBAR=False

# DJANGO_LOG_LEVEL controls Django's internal logging verbosity for testing
DJANGO_LOG_LEVEL=DEBUG
