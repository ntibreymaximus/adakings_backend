# Generated by Django 4.2.23 on 2025-07-14 15:57

from django.db import migrations, transaction



def populate_delivery_names_from_fees(apps, schema_editor):
    """Populate missing historical fee data from existing delivery_fee."""
    Order = apps.get_model('orders', 'Order')
    
    with transaction.atomic():
        # Find all delivery orders with a delivery fee but no historical fee
        orders = Order.objects.filter(
            delivery_type='Delivery',
            delivery_fee__gt=0,
            delivery_location_fee__isnull=True
        )
        
        for order in orders:
            # Set historical fee from the calculated fee
            order.delivery_location_fee = order.delivery_fee
            # Set a descriptive name if missing
            if not order.delivery_location_name:
                if order.delivery_fee == 0:
                    order.delivery_location_name = "Bolt Delivery"
                elif order.delivery_fee == 5:
                    order.delivery_location_name = "Campus Delivery"
                elif order.delivery_fee == 10:
                    order.delivery_location_name = "Near Campus Delivery"
                elif order.delivery_fee == 15:
                    order.delivery_location_name = "Off-Campus Delivery"
                else:
                    order.delivery_location_name = f"Delivery (â‚µ{order.delivery_fee})"
            order.save(update_fields=['delivery_location_fee', 'delivery_location_name'])


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0024_fix_missing_delivery_history'),
    ]

    operations = [
        migrations.RunPython(populate_delivery_names_from_fees),
    ]
