# Generated by Django 5.2.1 on 2025-05-24 14:35

from django.db import migrations, models
from django.utils import timezone


def generate_order_numbers(apps, schema_editor):
    """
    Generate order numbers for existing orders in the format DDMMYY-XXX
    """
    Order = apps.get_model('orders', 'Order')
    # Get all orders without order numbers
    orders = Order.objects.all().order_by('created_at')
    
    # Dictionary to track sequence numbers by date
    date_counters = {}
    
    for order in orders:
        # Get the date part in DDMMYY format
        date_part = order.created_at.strftime("%d%m%y")
        
        # Get or initialize counter for this date
        if date_part not in date_counters:
            date_counters[date_part] = 1
        else:
            date_counters[date_part] += 1
        
        # Format the order number
        seq_number = date_counters[date_part]
        order_number = f"{date_part}-{seq_number:03d}"
        
        # Set the order number
        order.order_number = order_number
        order.save()


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0002_merge_extras_into_menuitems'),
    ]

    operations = [
        # Step 1: Add order_number field as nullable and non-unique
        migrations.AddField(
            model_name='order',
            name='order_number',
            field=models.CharField(blank=True, help_text='Unique order number in format DDMMYY-XXX', max_length=20, null=True),
        ),
        
        # Step 2: Run data migration to populate order numbers
        migrations.RunPython(generate_order_numbers),
        
        # Step 3: Make order_number field unique and non-nullable
        migrations.AlterField(
            model_name='order',
            name='order_number',
            field=models.CharField(blank=True, help_text='Unique order number in format DDMMYY-XXX', max_length=20, unique=True),
        ),
    ]
