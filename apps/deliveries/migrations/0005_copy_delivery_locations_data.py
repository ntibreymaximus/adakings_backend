# Generated by Django 4.2.23 on 2025-07-12 11:16

from django.db import migrations


def copy_delivery_locations(apps, schema_editor):
    """Copy delivery locations from orders app to deliveries app"""
    db_alias = schema_editor.connection.alias
    
    # Get the old model from orders app
    try:
        cursor = schema_editor.connection.cursor()
        cursor.execute("""
            SELECT name, fee, is_active, created_at, updated_at 
            FROM orders_deliverylocation
        """)
        rows = cursor.fetchall()
        
        # Get the new model from deliveries app
        DeliveryLocation = apps.get_model('deliveries', 'DeliveryLocation')
        
        # Copy data
        for row in rows:
            DeliveryLocation.objects.using(db_alias).create(
                name=row[0],
                fee=row[1],
                is_active=row[2],
                created_at=row[3],
                updated_at=row[4]
            )
    except Exception as e:
        # If orders_deliverylocation doesn't exist or is empty, skip
        print(f"Could not copy delivery locations: {e}")


def reverse_copy(apps, schema_editor):
    """Delete all delivery locations from deliveries app"""
    DeliveryLocation = apps.get_model('deliveries', 'DeliveryLocation')
    DeliveryLocation.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('deliveries', '0004_fix_deliverylocation_schema'),
    ]

    operations = [
        migrations.RunPython(copy_delivery_locations, reverse_copy),
    ]
