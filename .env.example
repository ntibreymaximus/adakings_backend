# ==============================================================================\r\n# ADAKINGS BACKEND - ENVIRONMENT VARIABLES EXAMPLE\r\n# ==============================================================================\r\n# Copy this file to .env and update the values according to your environment\r\n# For local development, the default values below should work out of the box\r\n\r\n# ==============================================================================\r\n# DJANGO CORE SETTINGS\r\n# ==============================================================================\r\n

# DJANGO_ENVIRONMENT determines which settings module Django loads
# Options: development, dev_test, production
DJANGO_ENVIRONMENT=development

# DJANGO_SECRET_KEY is used for cryptographic signing in Django (sessions, cookies, CSRF tokens)
# Generate a new secret key for each environment - never use this default in production
DJANGO_SECRET_KEY=your-secret-key-here

# DJANGO_DEBUG controls Django's debug mode - shows detailed error pages and enables debug toolbar
DJANGO_DEBUG=True

# DJANGO_ALLOWED_HOSTS defines which host/domain names Django can serve - prevents HTTP Host header attacks
DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost

# Database Configuration (PostgreSQL)
# DB_NAME is the PostgreSQL database name for storing application data
DB_NAME=adakings_dev

# DB_USER is the username for authenticating with the PostgreSQL database
DB_USER=dev_user

# DB_PASSWORD is the password for PostgreSQL database authentication
DB_PASSWORD=your-db-password

# DB_HOST is the hostname/IP address where PostgreSQL server is running
DB_HOST=localhost

# DB_PORT is the port number PostgreSQL listens on (default: 5432)
DB_PORT=5432

# Email configuration for sending transactional emails
# For local development, services like Mailtrap or MailHog can be used
# EMAIL_HOST is the SMTP server hostname for sending emails
EMAIL_HOST=smtp.gmail.com

# EMAIL_PORT is the SMTP server port (587 for TLS, 465 for SSL)
EMAIL_PORT=587

# EMAIL_HOST_USER is the username/email for SMTP authentication
EMAIL_HOST_USER=your-email@gmail.com

# EMAIL_HOST_PASSWORD is the password/app password for SMTP authentication
EMAIL_HOST_PASSWORD=your-app-password

# DEFAULT_FROM_EMAIL sets the default 'from' address for system emails
DEFAULT_FROM_EMAIL=noreply@adakings.local

# Paystack Configuration (Test keys only - never use live keys in development)
# PAYSTACK_PUBLIC_KEY_LIVE for frontend payment processing in dev sandbox
PAYSTACK_PUBLIC_KEY_LIVE=pk_test_dev_public_key_placeholder

# PAYSTACK_SECRET_KEY_LIVE for backend payment verification in dev sandbox
PAYSTACK_SECRET_KEY_LIVE=sk_test_dev_secret_key_placeholder

# CORS Configuration (Development origins)
# CORS_ALLOWED_ORIGINS defines which frontend origins can make cross-origin requests to the API
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# CSRF_TRUSTED_ORIGINS defines trusted origins for CSRF protection
CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# Redis Configuration (Development database)
# REDIS_URL is the connection string for Redis cache and session storage
REDIS_URL=redis://127.0.0.1:6379/0

# Security Headers (Disabled for development)
# SECURE_SSL_REDIRECT forces HTTPS redirects (disabled in dev to allow HTTP)
SECURE_SSL_REDIRECT=False

# SECURE_HSTS_SECONDS sets HTTP Strict Transport Security max-age (0 disables HSTS)
SECURE_HSTS_SECONDS=0

# SECURE_HSTS_INCLUDE_SUBDOMAINS applies HSTS policy to subdomains
SECURE_HSTS_INCLUDE_SUBDOMAINS=False

# SECURE_HSTS_PRELOAD allows browsers to preload HSTS policy
SECURE_HSTS_PRELOAD=False

# Monitoring & Logging (Development settings)
# SENTRY_DSN is the Data Source Name URL for error tracking with Sentry
SENTRY_DSN=

# LOG_LEVEL controls the verbosity of application logging (DEBUG shows all messages)
LOG_LEVEL=DEBUG

# ==============================================================================
# STATIC AND MEDIA FILES
# ==============================================================================

# Static files configuration (usually not needed for local development)
# STATIC_URL=/static/
# STATIC_ROOT=/path/to/static/files

# Media files configuration (for user uploads)
# MEDIA_URL=/media/
# MEDIA_ROOT=/path/to/media/files

# ==============================================================================
# PERFORMANCE SETTINGS
# ==============================================================================

# Maximum file upload size in bytes (default: 10MB)
DATA_UPLOAD_MAX_MEMORY_SIZE=10485760
FILE_UPLOAD_MAX_MEMORY_SIZE=10485760

# Cache timeout in seconds
CACHE_TIMEOUT=60

# API rate limiting
RATE_LIMIT_ENABLE=True
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=3600

# ==============================================================================
# ADDITIONAL SECURITY SETTINGS
# ==============================================================================

# Secure cookies (set to False for local development)
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# Development Tools (All enabled for development)
# ENABLE_SWAGGER_UI toggles the Swagger API documentation interface
ENABLE_SWAGGER_UI=True

# ENABLE_REDOC toggles the ReDoc API documentation interface
ENABLE_REDOC=True

# ENABLE_DEBUG_TOOLBAR toggles Django Debug Toolbar for performance profiling
ENABLE_DEBUG_TOOLBAR=True

# DJANGO_LOG_LEVEL controls Django's internal logging verbosity
DJANGO_LOG_LEVEL=DEBUG

# ==============================================================================
# JWT TOKEN SETTINGS
# ==============================================================================

# JWT token lifetimes (in minutes for access, days for refresh)
# JWT_ACCESS_TOKEN_LIFETIME=60
# JWT_REFRESH_TOKEN_LIFETIME=7

# ==============================================================================
# HEALTH CHECK SETTINGS
# ==============================================================================

# Health check endpoints configuration
# HEALTH_CHECK_ENDPOINTS=health/,api/health/

# ==============================================================================
# DEVELOPMENT NOTES
# ==============================================================================
# 
# 1. For local development setup:
#    - Install PostgreSQL and create database 'adakings_dev'
#    - Install Redis server and ensure it's running on port 6379
#    - Create a Paystack test account and get test API keys
#    - Use Gmail app passwords or Mailtrap for email testing
#
# 2. Database setup commands:
#    - createdb adakings_dev
#    - python manage.py migrate
#    - python manage.py createsuperuser
#
# 3. For production deployment:
#    - Change DJANGO_SECRET_KEY to a strong, unique value
#    - Set DJANGO_DEBUG=False
#    - Update DJANGO_ALLOWED_HOSTS with your domain
#    - Use production database credentials
#    - Enable SSL settings (SECURE_SSL_REDIRECT=True)
#    - Use live Paystack keys (never commit these to version control)
#
# 4. Required services for full functionality:
#    - PostgreSQL 12+ (database)
#    - Redis 6+ (caching and sessions)
#    - SMTP service (email sending)
#    - Paystack account (payment processing)
#
# 5. Optional services:
#    - Sentry (error monitoring)
#    - Whitenoise (static file serving)
#    - Gunicorn (production WSGI server)
# 
# ==============================================================================
