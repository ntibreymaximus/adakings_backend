version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: adakings_dev_db
    environment:
      POSTGRES_DB: adakings_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d adakings_dev"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: adakings_dev_redis
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Django Application
  web:
    build:
      context: ../../
      dockerfile: environments/dev/Dockerfile
    container_name: adakings_dev_web
    ports:
      - "8001:8001"
    volumes:
      - ../../:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - logs_volume:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=adakings_backend.settings.dev
      - DJANGO_ENVIRONMENT=dev
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=adakings_dev
      - DB_USER=dev_user
      - DB_PASSWORD=dev_password_123
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn -c environments/dev/gunicorn.conf.py adakings_backend.wsgi:application
      "

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: adakings_dev_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/adakings_backend/staticfiles
      - media_volume:/var/www/adakings_backend/mediafiles
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

networks:
  default:
    name: adakings_dev_network
